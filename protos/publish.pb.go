// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/publish.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PublishBody struct {
	Topics               []string          `protobuf:"bytes,1,rep,name=topics,proto3" json:"topics,omitempty"`
	Action               string            `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	Body                 map[string]string `protobuf:"bytes,3,rep,name=body,proto3" json:"body,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PublishBody) Reset()         { *m = PublishBody{} }
func (m *PublishBody) String() string { return proto.CompactTextString(m) }
func (*PublishBody) ProtoMessage()    {}
func (*PublishBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_a343d2c9ec21a458, []int{0}
}

func (m *PublishBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishBody.Unmarshal(m, b)
}
func (m *PublishBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishBody.Marshal(b, m, deterministic)
}
func (m *PublishBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishBody.Merge(m, src)
}
func (m *PublishBody) XXX_Size() int {
	return xxx_messageInfo_PublishBody.Size(m)
}
func (m *PublishBody) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishBody.DiscardUnknown(m)
}

var xxx_messageInfo_PublishBody proto.InternalMessageInfo

func (m *PublishBody) GetTopics() []string {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *PublishBody) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *PublishBody) GetBody() map[string]string {
	if m != nil {
		return m.Body
	}
	return nil
}

type PublishResponse struct {
	Value                map[string]uint32 `protobuf:"bytes,1,rep,name=value,proto3" json:"value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PublishResponse) Reset()         { *m = PublishResponse{} }
func (m *PublishResponse) String() string { return proto.CompactTextString(m) }
func (*PublishResponse) ProtoMessage()    {}
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a343d2c9ec21a458, []int{1}
}

func (m *PublishResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PublishResponse.Unmarshal(m, b)
}
func (m *PublishResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PublishResponse.Marshal(b, m, deterministic)
}
func (m *PublishResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PublishResponse.Merge(m, src)
}
func (m *PublishResponse) XXX_Size() int {
	return xxx_messageInfo_PublishResponse.Size(m)
}
func (m *PublishResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PublishResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PublishResponse proto.InternalMessageInfo

func (m *PublishResponse) GetValue() map[string]uint32 {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*PublishBody)(nil), "protos.PublishBody")
	proto.RegisterMapType((map[string]string)(nil), "protos.PublishBody.BodyEntry")
	proto.RegisterType((*PublishResponse)(nil), "protos.PublishResponse")
	proto.RegisterMapType((map[string]uint32)(nil), "protos.PublishResponse.ValueEntry")
}

func init() { proto.RegisterFile("protos/publish.proto", fileDescriptor_a343d2c9ec21a458) }

var fileDescriptor_a343d2c9ec21a458 = []byte{
	// 240 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0x28, 0xca, 0x2f,
	0xc9, 0x2f, 0xd6, 0x2f, 0x28, 0x4d, 0xca, 0xc9, 0x2c, 0xce, 0xd0, 0x03, 0x73, 0x85, 0xd8, 0x20,
	0xa2, 0x4a, 0x2b, 0x19, 0xb9, 0xb8, 0x03, 0x20, 0x32, 0x4e, 0xf9, 0x29, 0x95, 0x42, 0x62, 0x5c,
	0x6c, 0x25, 0xf9, 0x05, 0x99, 0xc9, 0xc5, 0x12, 0x8c, 0x0a, 0xcc, 0x1a, 0x9c, 0x41, 0x50, 0x1e,
	0x48, 0x3c, 0x31, 0xb9, 0x24, 0x33, 0x3f, 0x4f, 0x82, 0x49, 0x81, 0x11, 0x24, 0x0e, 0xe1, 0x09,
	0x19, 0x72, 0xb1, 0x24, 0xe5, 0xa7, 0x54, 0x4a, 0x30, 0x2b, 0x30, 0x6b, 0x70, 0x1b, 0xc9, 0x42,
	0x4c, 0x2f, 0xd6, 0x43, 0x32, 0x52, 0x0f, 0x44, 0xb8, 0xe6, 0x95, 0x14, 0x55, 0x06, 0x81, 0x95,
	0x4a, 0x99, 0x73, 0x71, 0xc2, 0x85, 0x84, 0x04, 0xb8, 0x98, 0xb3, 0x53, 0x2b, 0x25, 0x18, 0xc1,
	0x86, 0x82, 0x98, 0x42, 0x22, 0x5c, 0xac, 0x65, 0x89, 0x39, 0xa5, 0xa9, 0x50, 0x8b, 0x20, 0x1c,
	0x2b, 0x26, 0x0b, 0x46, 0xa5, 0x56, 0x46, 0x2e, 0x7e, 0xa8, 0xc1, 0x41, 0xa9, 0xc5, 0x05, 0xf9,
	0x79, 0xc5, 0xa9, 0x42, 0x16, 0x30, 0xd5, 0x8c, 0x60, 0x07, 0x28, 0xa1, 0x39, 0x00, 0xa6, 0x4e,
	0x2f, 0x0c, 0xa4, 0x08, 0xe2, 0x0a, 0x88, 0x06, 0x29, 0x0b, 0x2e, 0x2e, 0x84, 0x20, 0x21, 0x77,
	0xf0, 0x22, 0xb9, 0xc3, 0xc8, 0x89, 0x8b, 0x1d, 0x6a, 0xbc, 0x90, 0x39, 0x17, 0x7b, 0x51, 0x6a,
	0x4e, 0x6a, 0x62, 0x71, 0xaa, 0x90, 0x30, 0x16, 0xbf, 0x4b, 0x89, 0xe3, 0x70, 0x4f, 0x12, 0x24,
	0xfc, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xef, 0x6d, 0xcc, 0x6a, 0x9e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PublishClient is the client API for Publish service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PublishClient interface {
	Release(ctx context.Context, in *PublishBody, opts ...grpc.CallOption) (*PublishResponse, error)
}

type publishClient struct {
	cc *grpc.ClientConn
}

func NewPublishClient(cc *grpc.ClientConn) PublishClient {
	return &publishClient{cc}
}

func (c *publishClient) Release(ctx context.Context, in *PublishBody, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := c.cc.Invoke(ctx, "/protos.Publish/release", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PublishServer is the server API for Publish service.
type PublishServer interface {
	Release(context.Context, *PublishBody) (*PublishResponse, error)
}

// UnimplementedPublishServer can be embedded to have forward compatible implementations.
type UnimplementedPublishServer struct {
}

func (*UnimplementedPublishServer) Release(ctx context.Context, req *PublishBody) (*PublishResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Release not implemented")
}

func RegisterPublishServer(s *grpc.Server, srv PublishServer) {
	s.RegisterService(&_Publish_serviceDesc, srv)
}

func _Publish_Release_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PublishBody)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublishServer).Release(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.Publish/Release",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublishServer).Release(ctx, req.(*PublishBody))
	}
	return interceptor(ctx, in, info, handler)
}

var _Publish_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.Publish",
	HandlerType: (*PublishServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "release",
			Handler:    _Publish_Release_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "protos/publish.proto",
}
